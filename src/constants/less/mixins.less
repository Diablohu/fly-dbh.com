.is-hover( @rules ) {
    html.is-hover &:hover {
        @rules();
    }
}
.is-hover( @rulesHover ; @rulesActive ) {
    html.is-hover &:hover {
        @rulesHover();
    }
    &:active,
    html.is-hover &:hover:active {
        @rulesActive();
    }
}

.is-hover-with-focus( @rules ) {
    html.is-hover & {
        &:hover {
            @rules();
        }
        &:focus {
            outline: 0;
        }
        &:focus:not(:active) {
            @rules();
        }
    }
}
.is-hover-with-focus( @rulesHover ; @rulesActive ) {
    html.is-hover & {
        &:hover {
            @rulesHover();
        }
        &:focus {
            outline: 0;
        }
        &:focus:not(:active) {
            @rulesHover();
        }
    }
    &:active,
    html.is-hover &:hover:active {
        @rulesActive();
    }
}

.is-active( @rulesActive ) {
    &:active,
    html.is-hover &:hover:active {
        @rulesActive();
    }
}

.is-dragging-file( @rules ) {
    html.is-dragging-over & {
        @rules();
    }
}

// ============================================================================

.dark-theme( @rules ) {
    @media-query-dark-theme: ~'(prefers-color-scheme: dark)';
    @media @media-query-dark-theme {
        & {
            @rules();
        }
    }
}

.transition(...) {
    transition-property: @arguments;
    // transition-duration: 200ms;
    // transition-timing-function: ease-out;
}

.input-placeholder(@styles) {
    &::-webkit-input-placeholder {
        /* Chrome/Opera/Safari */
        @styles();
    }
    &::-moz-placeholder {
        /* Firefox 19+ */
        @styles();
    }
    &:-ms-input-placeholder {
        /* IE 10+ */
        @styles();
    }
    &:-moz-placeholder {
        /* Firefox 18- */
        @styles();
    }
}

.force-word-break() {
    /* These are technically the same, but use both */
    overflow-wrap: break-word;
    word-wrap: break-word;

    -ms-word-break: break-all;
    /* This is the dangerous one in WebKit, as it breaks things wherever */
    word-break: break-all;
    /* Instead use this non-standard one: */
    word-break: break-word;

    /* Adds a hyphen where the word breaks, if supported (No Blink) */
    -ms-hyphens: auto;
    -moz-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
}

.hero-patterns(@ellipseAt: bottom) {
    @color-pattern-1: mix(#fff, @theme-bluegrey-50);
    @color-pattern-2: mix(#fff, @theme-bluegrey-100);
    @color-pattern-3: mix(#fff, @theme-bluegrey-200);
    position: relative;
    &::before,
    &::after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }
    &::before {
        z-index: -2;
        background: radial-gradient(
            ellipse at @ellipseAt,
            @color-pattern-1 25%,
            @color-pattern-3 100%
        );
    }
    &::after {
        z-index: -1;
        opacity: 0.05;
        background: linear-gradient(
                135deg,
                #708090 21px,
                #d9ecff 22px,
                #d9ecff 24px,
                transparent 24px,
                transparent 67px,
                #d9ecff 67px,
                #d9ecff 69px,
                transparent 69px
            ),
            linear-gradient(
                    225deg,
                    #708090 21px,
                    #d9ecff 22px,
                    #d9ecff 24px,
                    transparent 24px,
                    transparent 67px,
                    #d9ecff 67px,
                    #d9ecff 69px,
                    transparent 69px
                )
                0 64px;
        background-color: #708090;
        background-size: 64px 128px;
    }
}

// General ====================================================================
.styles-link() {
    .transition(color);
    color: @color-accent;

    .styles-hover() {
        color: @color-accent-darker;
    }
    .styles-active() {
        color: @color-link-active;
    }
    .is-hover(.styles-hover() , .styles-active() );
}
